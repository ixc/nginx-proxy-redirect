daemon               off;
error_log            /dev/stderr;
pid                  nginx.pid;
worker_processes     {{ default .Env.WORKER_PROCESSES "1" }};

events {}

http {
    access_log            /dev/stdout;
    client_max_body_size  {{ default .Env.CLIENT_MAX_BODY_SIZE "10m" }};
    
    # Improve handling of long domain names to avoid the error:
    #     nginx: [emerg] could not build the server_names_hash
    server_names_hash_bucket_size 128;

    # Support gzip compression.
    gzip          on;
    gzip_proxied  any;
    gzip_types    application/atom+xml
                  application/javascript
                  application/json
                  application/rss+xml
                  application/xml
                  image/svg+xml
                  text/css
                  # text/html  # Always compressed, see: http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_types
                  text/javascript
                  text/plain
                  text/xml;
    gzip_vary     on;

    # Support websockets. See: http://nginx.org/en/docs/http/websocket.html
    map $http_upgrade $connection_upgrade {
        default  upgrade;
        ''       close;
    }

    {{ range $server_index, $server := jsonQuery .Env.CONFIG "." -}}
    server {
        {{ if $server.client_max_body_size -}}
        client_max_body_size  {{ $server.client_max_body_size }};
        {{ end -}}

        listen                80;
        server_name           {{ $server.server_name }};

        {{ range $location_index, $location := $server.locations -}}
        location {{ default $location.rule "/" }} {
            {{ if $location.proxy -}}
            proxy_pass         {{ $location.url }};
            proxy_pass_header  X-Forwarded-Proto;
            {{ if $location.proxy_hostname -}}
            proxy_set_header  Host             {{ $location.proxy_hostname }};
            {{- else -}}
            proxy_set_header  Host             $http_host;
            {{- end }}
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            # Get the real client IP from trusted proxies. See: https://serverfault.com/a/414166
            real_ip_header     X-Forwarded-For;
            real_ip_recursive  on;
            set_real_ip_from   127.0.0.1;
            set_real_ip_from   10.0.0.0/8;
            set_real_ip_from   172.16.0.0/12;
            set_real_ip_from   192.168.0.0/16;

            # Support websockets. See: http://nginx.org/en/docs/http/websocket.html
            proxy_http_version  1.1;
            proxy_set_header    Connection  $connection_upgrade;
            proxy_set_header    Upgrade     $http_upgrade;
            {{- else -}}
            return {{ if $location.permanent }}301{{ else }}302{{ end }} {{ $location.url }};
            {{- end }}
        }

        {{ end }}
    }

    {{ end }}

    include conf.d/*.conf;
}
